export { CalendarNav as MbscCalendarNav, CalendarNext as MbscCalendarNext, CalendarPrev as MbscCalendarPrev, CalendarToday as MbscCalendarToday, } from '../shared/calendar-header';
export * from '../../core/components/datepicker/datepicker.public';
export declare const datepickerProps: {
    calendarScroll: StringConstructor;
    calendarSize: NumberConstructor;
    calendarType: StringConstructor;
    circular: {
        type: (ArrayConstructor | BooleanConstructor)[];
        default: undefined;
    };
    colors: ArrayConstructor;
    controls: ArrayConstructor;
    dateWheels: StringConstructor;
    endInput: (ObjectConstructor | StringConstructor)[];
    firstSelectDay: NumberConstructor;
    inRangeInvalid: {
        type: BooleanConstructor;
        default: undefined;
    };
    itemHeight: NumberConstructor;
    labels: ArrayConstructor;
    marked: ArrayConstructor;
    maxRange: NumberConstructor;
    maxTime: (ObjectConstructor | StringConstructor)[];
    maxWheelWidth: (ArrayConstructor | NumberConstructor)[];
    minRange: NumberConstructor;
    minTime: (ObjectConstructor | StringConstructor)[];
    minWheelWidth: NumberConstructor;
    pages: NumberConstructor;
    rangeEndInvalid: {
        type: BooleanConstructor;
        default: undefined;
    };
    rangeHighlight: {
        type: BooleanConstructor;
        default: undefined;
    };
    refDate: (ObjectConstructor | StringConstructor)[];
    renderCalendarHeader: FunctionConstructor;
    renderDay: FunctionConstructor;
    renderDayContent: FunctionConstructor;
    rows: NumberConstructor;
    select: StringConstructor;
    selectCounter: {
        type: BooleanConstructor;
        default: undefined;
    };
    selectMax: NumberConstructor;
    selectSize: NumberConstructor;
    showOuterDays: {
        type: BooleanConstructor;
        default: undefined;
    };
    showRangeLabels: {
        type: BooleanConstructor;
        default: undefined;
    };
    showWeekNumbers: {
        type: BooleanConstructor;
        default: undefined;
    };
    startInput: (ObjectConstructor | StringConstructor)[];
    stepHour: NumberConstructor;
    stepMinute: NumberConstructor;
    stepSecond: NumberConstructor;
    tabs: {
        type: BooleanConstructor;
        default: undefined;
    };
    timeWheels: StringConstructor;
    wheelWidth: (ArrayConstructor | NumberConstructor)[];
    nextPageText: StringConstructor;
    prevPageText: StringConstructor;
    rangeEndHelp: StringConstructor;
    rangeEndLabel: StringConstructor;
    rangeStartHelp: StringConstructor;
    rangeStartLabel: StringConstructor;
    selectedPluralText: StringConstructor;
    selectedText: StringConstructor;
    onActiveChange: FunctionConstructor;
    onCellClick: FunctionConstructor;
    onLabelClick: FunctionConstructor;
    onPageChange: FunctionConstructor;
    onPageLoaded: FunctionConstructor;
    onPageLoading: FunctionConstructor;
    amText: StringConstructor;
    calendarSystem: ObjectConstructor;
    dataTimezone: StringConstructor;
    dateFormat: StringConstructor;
    dateFormatLong: StringConstructor;
    dayNames: ArrayConstructor;
    dayNamesMin: ArrayConstructor;
    dayNamesShort: ArrayConstructor;
    daySuffix: StringConstructor;
    displayTimezone: StringConstructor;
    exclusiveEndDates: {
        type: BooleanConstructor;
        default: undefined;
    };
    firstDay: NumberConstructor;
    fromText: StringConstructor;
    getDate: FunctionConstructor;
    getDay: FunctionConstructor;
    getMaxDayOfMonth: FunctionConstructor;
    getMonth: FunctionConstructor;
    getWeekNumber: FunctionConstructor;
    getYear: FunctionConstructor;
    invalid: ArrayConstructor;
    max: (ObjectConstructor | StringConstructor)[];
    min: (ObjectConstructor | StringConstructor)[];
    moment: ObjectConstructor;
    monthNames: ArrayConstructor;
    monthNamesShort: ArrayConstructor;
    monthSuffix: StringConstructor;
    pmText: StringConstructor;
    quarterText: StringConstructor;
    returnFormat: StringConstructor;
    separator: StringConstructor;
    shortYearCutoff: StringConstructor;
    timeFormat: StringConstructor;
    timezonePlugin: ObjectConstructor;
    toText: StringConstructor;
    todayText: StringConstructor;
    valid: ArrayConstructor;
    weekText: StringConstructor;
    yearSuffix: StringConstructor;
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    dropdown: {
        type: BooleanConstructor;
        default: undefined;
    };
    endIcon: StringConstructor;
    endIconSrc: StringConstructor;
    endIconSvg: StringConstructor;
    error: {
        type: BooleanConstructor;
        default: undefined;
    };
    errorMessage: StringConstructor;
    inputStyle: StringConstructor;
    label: StringConstructor;
    labelStyle: StringConstructor;
    modelValue: undefined;
    name: StringConstructor;
    placeholder: StringConstructor;
    startIcon: StringConstructor;
    startIconSrc: StringConstructor;
    startIconSvg: StringConstructor;
    tagInput: {
        type: BooleanConstructor;
        default: undefined;
    };
    ariaLabel: StringConstructor;
    defaultSelection: undefined;
    defaultValue: undefined;
    element: ObjectConstructor;
    headerText: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    inputComponent: (ObjectConstructor | StringConstructor)[];
    inputProps: ObjectConstructor;
    inputTyping: {
        type: BooleanConstructor;
        default: undefined;
    };
    selectMultiple: {
        type: BooleanConstructor;
        default: undefined;
    };
    showInput: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOnClick: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOnFocus: {
        type: BooleanConstructor;
        default: undefined;
    };
    value: undefined;
    valueMap: ObjectConstructor;
    clearText: StringConstructor;
    onCancel: FunctionConstructor;
    onChange: FunctionConstructor;
    onTempChange: FunctionConstructor;
    activeElm: (ObjectConstructor | StringConstructor)[];
    anchor: ObjectConstructor;
    anchorAlign: StringConstructor;
    animation: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    buttonVariant: StringConstructor;
    buttons: ArrayConstructor;
    closeOnEsc: {
        type: BooleanConstructor;
        default: undefined;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: undefined;
    };
    closeOnScroll: {
        type: BooleanConstructor;
        default: undefined;
    };
    contentPadding: {
        type: BooleanConstructor;
        default: undefined;
    };
    context: (ObjectConstructor | StringConstructor)[];
    disableLeftRight: {
        type: BooleanConstructor;
        default: undefined;
    };
    display: StringConstructor;
    focusElm: ObjectConstructor;
    focusOnClose: {
        type: BooleanConstructor;
        default: undefined;
    };
    focusOnOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    focusTrap: {
        type: BooleanConstructor;
        default: undefined;
    };
    fullScreen: {
        type: BooleanConstructor;
        default: undefined;
    };
    height: (StringConstructor | NumberConstructor)[];
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    maxHeight: (StringConstructor | NumberConstructor)[];
    maxWidth: (StringConstructor | NumberConstructor)[];
    scrollLock: {
        type: BooleanConstructor;
        default: undefined;
    };
    setActive: {
        type: BooleanConstructor;
        default: undefined;
    };
    showArrow: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: undefined;
    };
    width: (StringConstructor | NumberConstructor)[];
    windowWidth: NumberConstructor;
    cancelText: StringConstructor;
    closeText: StringConstructor;
    okText: StringConstructor;
    setText: StringConstructor;
    onButtonClick: FunctionConstructor;
    onClose: FunctionConstructor;
    onClosed: FunctionConstructor;
    onKeyDown: FunctionConstructor;
    onOpen: FunctionConstructor;
    onPosition: FunctionConstructor;
    onResize: FunctionConstructor;
    baseTheme: StringConstructor;
    className: StringConstructor;
    cssClass: StringConstructor;
    locale: (ObjectConstructor | StringConstructor)[];
    modules: ObjectConstructor[];
    responsive: ObjectConstructor;
    rtl: {
        type: BooleanConstructor;
        default: undefined;
    };
    theme: StringConstructor;
    themeVariant: StringConstructor;
    touchUi: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    onDestroy: FunctionConstructor;
    onInit: FunctionConstructor;
};
export declare const MbscDatepicker: import("vue").DefineComponent<any, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<any>, {} | {
    [x: string]: any;
}>;
