export declare const popupProps: {
    activeElm: (ObjectConstructor | StringConstructor)[];
    anchor: ObjectConstructor;
    anchorAlign: StringConstructor;
    animation: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    buttonVariant: StringConstructor;
    buttons: ArrayConstructor;
    closeOnEsc: {
        type: BooleanConstructor;
        default: undefined;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: undefined;
    };
    closeOnScroll: {
        type: BooleanConstructor;
        default: undefined;
    };
    contentPadding: {
        type: BooleanConstructor;
        default: undefined;
    };
    context: (ObjectConstructor | StringConstructor)[];
    disableLeftRight: {
        type: BooleanConstructor;
        default: undefined;
    };
    display: StringConstructor;
    focusElm: ObjectConstructor;
    focusOnClose: {
        type: BooleanConstructor;
        default: undefined;
    };
    focusOnOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    focusTrap: {
        type: BooleanConstructor;
        default: undefined;
    };
    fullScreen: {
        type: BooleanConstructor;
        default: undefined;
    };
    headerText: StringConstructor;
    height: (StringConstructor | NumberConstructor)[];
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    maxHeight: (StringConstructor | NumberConstructor)[];
    maxWidth: (StringConstructor | NumberConstructor)[];
    scrollLock: {
        type: BooleanConstructor;
        default: undefined;
    };
    setActive: {
        type: BooleanConstructor;
        default: undefined;
    };
    showArrow: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: undefined;
    };
    width: (StringConstructor | NumberConstructor)[];
    windowWidth: NumberConstructor;
    cancelText: StringConstructor;
    closeText: StringConstructor;
    okText: StringConstructor;
    setText: StringConstructor;
    onButtonClick: FunctionConstructor;
    onClose: FunctionConstructor;
    onClosed: FunctionConstructor;
    onKeyDown: FunctionConstructor;
    onOpen: FunctionConstructor;
    onPosition: FunctionConstructor;
    onResize: FunctionConstructor;
    baseTheme: StringConstructor;
    className: StringConstructor;
    cssClass: StringConstructor;
    locale: (ObjectConstructor | StringConstructor)[];
    modules: ObjectConstructor[];
    responsive: ObjectConstructor;
    rtl: {
        type: BooleanConstructor;
        default: undefined;
    };
    theme: StringConstructor;
    themeVariant: StringConstructor;
    touchUi: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    onDestroy: FunctionConstructor;
    onInit: FunctionConstructor;
};
export declare const MbscPopup: import("vue").DefineComponent<any, object, {}, import("vue").ComputedOptions, import("vue").MethodOptions, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<any>, {} | {
    [x: string]: any;
}>;
export { MbscPopup as Popup };
