export * from '../../core/components/notifications/notifications.types.public';
export declare const MbscAlert: import("vue").DefineComponent<{
    okText: StringConstructor;
    title: StringConstructor;
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}, unknown, unknown, {}, {
    open(): void;
    close(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    okText: StringConstructor;
    title: StringConstructor;
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}>>, {
    isOpen: boolean;
}>;
export declare const MbscConfirm: import("vue").DefineComponent<{
    cancelText: StringConstructor;
    okText: StringConstructor;
    title: StringConstructor;
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}, unknown, unknown, {}, {
    open(): void;
    close(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    cancelText: StringConstructor;
    okText: StringConstructor;
    title: StringConstructor;
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}>>, {
    isOpen: boolean;
}>;
export declare const MbscPrompt: import("vue").DefineComponent<{
    cancelText: StringConstructor;
    inputType: StringConstructor;
    label: StringConstructor;
    okText: StringConstructor;
    placeholder: StringConstructor;
    title: StringConstructor;
    value: StringConstructor;
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}, unknown, {
    _value: string | undefined;
}, {}, {
    open(): void;
    close(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    cancelText: StringConstructor;
    inputType: StringConstructor;
    label: StringConstructor;
    okText: StringConstructor;
    placeholder: StringConstructor;
    title: StringConstructor;
    value: StringConstructor;
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}>>, {
    isOpen: boolean;
}>;
export declare const MbscToast: import("vue").DefineComponent<{
    color: StringConstructor;
    duration: {
        type: (BooleanConstructor | NumberConstructor)[];
        default: undefined;
    };
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}, unknown, unknown, {}, {
    open: () => void;
    close(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    color: StringConstructor;
    duration: {
        type: (BooleanConstructor | NumberConstructor)[];
        default: undefined;
    };
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}>>, {
    isOpen: boolean;
    duration: number | boolean;
}>;
export declare const MbscSnackbar: import("vue").DefineComponent<{
    button: ObjectConstructor;
    color: StringConstructor;
    duration: {
        type: (BooleanConstructor | NumberConstructor)[];
        default: undefined;
    };
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}, unknown, unknown, {}, {
    open: () => void;
    _onButtonClick(): void;
    close(): void;
}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    button: ObjectConstructor;
    color: StringConstructor;
    duration: {
        type: (BooleanConstructor | NumberConstructor)[];
        default: undefined;
    };
    animation: StringConstructor;
    callback: FunctionConstructor;
    context: StringConstructor;
    cssClass: StringConstructor;
    display: StringConstructor;
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    message: StringConstructor;
    theme: StringConstructor;
    themeVariant: StringConstructor;
    onClose: FunctionConstructor;
}>>, {
    isOpen: boolean;
    duration: number | boolean;
}>;
