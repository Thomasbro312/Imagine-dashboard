export declare const pickerProps: {
    disabled: {
        type: BooleanConstructor;
        default: undefined;
    };
    dropdown: {
        type: BooleanConstructor;
        default: undefined;
    };
    endIcon: StringConstructor;
    endIconSrc: StringConstructor;
    endIconSvg: StringConstructor;
    error: {
        type: BooleanConstructor;
        default: undefined;
    };
    errorMessage: StringConstructor;
    inputStyle: StringConstructor;
    label: StringConstructor;
    labelStyle: StringConstructor;
    modelValue: undefined;
    name: StringConstructor;
    placeholder: StringConstructor;
    startIcon: StringConstructor;
    startIconSrc: StringConstructor;
    startIconSvg: StringConstructor;
    tagInput: {
        type: BooleanConstructor;
        default: undefined;
    };
    ariaLabel: StringConstructor;
    defaultSelection: undefined;
    defaultValue: undefined;
    element: ObjectConstructor;
    headerText: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    inputComponent: (ObjectConstructor | StringConstructor)[];
    inputProps: ObjectConstructor;
    inputTyping: {
        type: BooleanConstructor;
        default: undefined;
    };
    invalid: ArrayConstructor;
    selectMultiple: {
        type: BooleanConstructor;
        default: undefined;
    };
    showInput: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOnClick: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOnFocus: {
        type: BooleanConstructor;
        default: undefined;
    };
    valid: ArrayConstructor;
    value: undefined;
    valueMap: ObjectConstructor;
    clearText: StringConstructor;
    onCancel: FunctionConstructor;
    onChange: FunctionConstructor;
    onTempChange: FunctionConstructor;
    activeElm: (ObjectConstructor | StringConstructor)[];
    anchor: ObjectConstructor;
    anchorAlign: StringConstructor;
    animation: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    buttonVariant: StringConstructor;
    buttons: ArrayConstructor;
    closeOnEsc: {
        type: BooleanConstructor;
        default: undefined;
    };
    closeOnOverlayClick: {
        type: BooleanConstructor;
        default: undefined;
    };
    closeOnScroll: {
        type: BooleanConstructor;
        default: undefined;
    };
    contentPadding: {
        type: BooleanConstructor;
        default: undefined;
    };
    context: (ObjectConstructor | StringConstructor)[];
    disableLeftRight: {
        type: BooleanConstructor;
        default: undefined;
    };
    display: StringConstructor;
    focusElm: ObjectConstructor;
    focusOnClose: {
        type: BooleanConstructor;
        default: undefined;
    };
    focusOnOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    focusTrap: {
        type: BooleanConstructor;
        default: undefined;
    };
    fullScreen: {
        type: BooleanConstructor;
        default: undefined;
    };
    height: (StringConstructor | NumberConstructor)[];
    isOpen: {
        type: BooleanConstructor;
        default: undefined;
    };
    maxHeight: (StringConstructor | NumberConstructor)[];
    maxWidth: (StringConstructor | NumberConstructor)[];
    scrollLock: {
        type: BooleanConstructor;
        default: undefined;
    };
    setActive: {
        type: BooleanConstructor;
        default: undefined;
    };
    showArrow: {
        type: BooleanConstructor;
        default: undefined;
    };
    showOverlay: {
        type: BooleanConstructor;
        default: undefined;
    };
    width: (StringConstructor | NumberConstructor)[];
    windowWidth: NumberConstructor;
    cancelText: StringConstructor;
    closeText: StringConstructor;
    okText: StringConstructor;
    setText: StringConstructor;
    onButtonClick: FunctionConstructor;
    onClose: FunctionConstructor;
    onClosed: FunctionConstructor;
    onKeyDown: FunctionConstructor;
    onOpen: FunctionConstructor;
    onPosition: FunctionConstructor;
    onResize: FunctionConstructor;
    baseTheme: StringConstructor;
    className: StringConstructor;
    cssClass: StringConstructor;
    locale: (ObjectConstructor | StringConstructor)[];
    modules: ObjectConstructor[];
    responsive: ObjectConstructor;
    rtl: {
        type: BooleanConstructor;
        default: undefined;
    };
    theme: StringConstructor;
    themeVariant: StringConstructor;
    touchUi: {
        type: (BooleanConstructor | StringConstructor)[];
        default: undefined;
    };
    onDestroy: FunctionConstructor;
    onInit: FunctionConstructor;
};
